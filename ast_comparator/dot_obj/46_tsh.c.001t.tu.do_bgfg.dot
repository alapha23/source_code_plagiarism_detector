digraph AST {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  node1 [label="scope do_bgfg",shape=box];
  node2 [label="if",shape=ellipse];
  node1 -> node2 [style=dotted];
  node3 [label="==",shape=ellipse];
  node4 [label="jpid",shape=ellipse];
  node3 -> node4;
  node5 [label="0",shape=ellipse];
  node3 -> node5;
  node2 -> node3 [style=dotted];
  node6 [label="call printf",shape=ellipse];
  node7 [label="name",shape=ellipse];
  node6 -> node7;
  node8 [label="\"%s command requires PID or %%jobid argument
\"",shape=ellipse];
  node6 -> node8;
  node2 -> node6 [style=dotted];
  node9 [label="return",shape=ellipse];
  node6 -> node9 [style=dotted];
  node10 [label="if",shape=ellipse];
  node2 -> node10 [style=dotted];
  node11 [label="==",shape=ellipse];
  node12 [label="*",shape=ellipse];
  node13 [label="jpid",shape=ellipse];
  node12 -> node13;
  node11 -> node12;
  node14 [label="37",shape=ellipse];
  node11 -> node14;
  node10 -> node11 [style=dotted];
  node15 [label="if",shape=ellipse];
  node10 -> node15 [style=dotted];
  node16 [label="==",shape=ellipse];
  node17 [label="modify",shape=ellipse];
  node18 [label="j",shape=ellipse];
  node17 -> node18;
  node19 [label="call getjobjid",shape=ellipse];
  node20 [label="jid",shape=ellipse];
  node19 -> node20;
  node21 [label="jobs",shape=ellipse];
  node19 -> node21;
  node17 -> node19 [style=dotted];
  node16 -> node17 [style=dotted];
  node22 [label="0",shape=ellipse];
  node16 -> node22;
  node15 -> node16 [style=dotted];
  node23 [label="call printf",shape=ellipse];
  node24 [label="jpid",shape=ellipse];
  node23 -> node24;
  node25 [label="\"%s: No such job
\"",shape=ellipse];
  node23 -> node25;
  node15 -> node23 [style=dotted];
  node26 [label="return",shape=ellipse];
  node23 -> node26 [style=dotted];
  node27 [label="else if",shape=ellipse];
  node10 -> node27 [style=dotted];
  node28 [label="&&",shape=ellipse];
  node29 [label=">",shape=ellipse];
  node30 [label="*",shape=ellipse];
  node31 [label="jpid",shape=ellipse];
  node30 -> node31;
  node29 -> node30;
  node32 [label="47",shape=ellipse];
  node29 -> node32;
  node28 -> node29 [style=dotted];
  node33 [label="<=",shape=ellipse];
  node34 [label="*",shape=ellipse];
  node35 [label="jpid",shape=ellipse];
  node34 -> node35;
  node33 -> node34;
  node36 [label="57",shape=ellipse];
  node33 -> node36;
  node28 -> node33 [style=dotted];
  node27 -> node28 [style=dotted];
  node37 [label="if",shape=ellipse];
  node27 -> node37 [style=dotted];
  node38 [label="==",shape=ellipse];
  node39 [label="modify",shape=ellipse];
  node40 [label="j",shape=ellipse];
  node39 -> node40;
  node41 [label="call getjobpid",shape=ellipse];
  node42 [label="pid",shape=ellipse];
  node41 -> node42;
  node43 [label="jobs",shape=ellipse];
  node41 -> node43;
  node39 -> node41 [style=dotted];
  node38 -> node39 [style=dotted];
  node44 [label="0",shape=ellipse];
  node38 -> node44;
  node37 -> node38 [style=dotted];
  node45 [label="call printf",shape=ellipse];
  node46 [label="pid",shape=ellipse];
  node45 -> node46;
  node47 [label="\"(%d): No such process
\"",shape=ellipse];
  node45 -> node47;
  node37 -> node45 [style=dotted];
  node48 [label="return",shape=ellipse];
  node45 -> node48 [style=dotted];
  node49 [label="call printf",shape=ellipse];
  node50 [label="name",shape=ellipse];
  node49 -> node50;
  node51 [label="\"%s: argument must be a PID or %%jobid
\"",shape=ellipse];
  node49 -> node51;
  node27 -> node49 [style=dotted];
  node52 [label="return",shape=ellipse];
  node49 -> node52 [style=dotted];
  node53 [label="if",shape=ellipse];
  node10 -> node53 [style=dotted];
  node54 [label="<",shape=ellipse];
  node55 [label="call kill",shape=ellipse];
  node56 [label="18",shape=ellipse];
  node55 -> node56;
  node57 [label="-",shape=ellipse];
  node58 [label="component",shape=ellipse];
  node57 -> node58;
  node59 [label="*",shape=ellipse];
  node60 [label="j",shape=ellipse];
  node59 -> node60;
  node58 -> node59;
  node61 [label=".",shape=ellipse];
  node58 -> node61;
  node62 [label="pid",shape=ellipse];
  node61 -> node62;
  node55 -> node57;
  node54 -> node55 [style=dotted];
  node63 [label="0",shape=ellipse];
  node54 -> node63;
  node53 -> node54 [style=dotted];
  node64 [label="call printf",shape=ellipse];
  node65 [label="\"error sending sig\"",shape=ellipse];
  node64 -> node65;
  node53 -> node64 [style=dotted];
  node66 [label="return",shape=ellipse];
  node64 -> node66 [style=dotted];
  node67 [label="if",shape=ellipse];
  node53 -> node67 [style=dotted];
  node68 [label="==",shape=ellipse];
  node69 [label="fg",shape=ellipse];
  node68 -> node69;
  node70 [label="0",shape=ellipse];
  node68 -> node70;
  node67 -> node68 [style=dotted];
  node71 [label="modify",shape=ellipse];
  node72 [label="component",shape=ellipse];
  node71 -> node72;
  node73 [label="*",shape=ellipse];
  node74 [label="j",shape=ellipse];
  node73 -> node74;
  node72 -> node73;
  node75 [label=".",shape=ellipse];
  node72 -> node75;
  node76 [label="state",shape=ellipse];
  node75 -> node76;
  node77 [label="1",shape=ellipse];
  node71 -> node77;
  node67 -> node71 [style=dotted];
  node78 [label="call waitfg",shape=ellipse];
  node79 [label="component",shape=ellipse];
  node78 -> node79;
  node80 [label="*",shape=ellipse];
  node81 [label="j",shape=ellipse];
  node80 -> node81;
  node79 -> node80;
  node82 [label=".",shape=ellipse];
  node79 -> node82;
  node83 [label="pid",shape=ellipse];
  node82 -> node83;
  node71 -> node78 [style=dotted];
  node84 [label="modify",shape=ellipse];
  node85 [label="component",shape=ellipse];
  node84 -> node85;
  node86 [label="*",shape=ellipse];
  node87 [label="j",shape=ellipse];
  node86 -> node87;
  node85 -> node86;
  node88 [label=".",shape=ellipse];
  node85 -> node88;
  node89 [label="state",shape=ellipse];
  node88 -> node89;
  node90 [label="2",shape=ellipse];
  node84 -> node90;
  node67 -> node84 [style=dotted];
  node91 [label="call printjob",shape=ellipse];
  node92 [label="j",shape=ellipse];
  node91 -> node92;
  node84 -> node91 [style=dotted];
  node93 [label="return",shape=ellipse];
  node91 -> node93 [style=dotted];
} 