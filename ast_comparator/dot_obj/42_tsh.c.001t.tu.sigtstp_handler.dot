digraph AST {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  node1 [label="scope sigtstp_handler",shape=box];
  node2 [label="call Sigaddset",shape=ellipse];
  node3 [label="17",shape=ellipse];
  node2 -> node3;
  node4 [label="&",shape=ellipse];
  node2 -> node4;
  node5 [label="mask_one",shape=ellipse];
  node4 -> node5;
  node1 -> node2 [style=dotted];
  node6 [label="call Sigfillset",shape=ellipse];
  node7 [label="&",shape=ellipse];
  node6 -> node7;
  node8 [label="mask_all",shape=ellipse];
  node7 -> node8;
  node2 -> node6 [style=dotted];
  node9 [label="if",shape=ellipse];
  node6 -> node9 [style=dotted];
  node10 [label="==",shape=ellipse];
  node11 [label="modify",shape=ellipse];
  node12 [label="fpid",shape=ellipse];
  node11 -> node12;
  node13 [label="call fgpid",shape=ellipse];
  node14 [label="jobs",shape=ellipse];
  node13 -> node14;
  node11 -> node13 [style=dotted];
  node10 -> node11 [style=dotted];
  node15 [label="0",shape=ellipse];
  node10 -> node15;
  node9 -> node10 [style=dotted];
  node16 [label="call printf",shape=ellipse];
  node17 [label="\"There is no foreground job
\"",shape=ellipse];
  node16 -> node17;
  node9 -> node16 [style=dotted];
  node18 [label="return",shape=ellipse];
  node16 -> node18 [style=dotted];
  node19 [label="call Kill",shape=ellipse];
  node20 [label="20",shape=ellipse];
  node19 -> node20;
  node21 [label="-",shape=ellipse];
  node22 [label="fpid",shape=ellipse];
  node21 -> node22;
  node19 -> node21;
  node9 -> node19 [style=dotted];
  node23 [label="modify",shape=ellipse];
  node24 [label="jobidx",shape=ellipse];
  node23 -> node24;
  node25 [label="call pid2jid",shape=ellipse];
  node26 [label="fpid",shape=ellipse];
  node25 -> node26;
  node23 -> node25 [style=dotted];
  node19 -> node23 [style=dotted];
  node27 [label="call Sigprocmask",shape=ellipse];
  node28 [label="&",shape=ellipse];
  node27 -> node28;
  node29 [label="prev_all",shape=ellipse];
  node28 -> node29;
  node30 [label="&",shape=ellipse];
  node27 -> node30;
  node31 [label="mask_all",shape=ellipse];
  node30 -> node31;
  node32 [label="0",shape=ellipse];
  node27 -> node32;
  node23 -> node27 [style=dotted];
  node33 [label="if",shape=ellipse];
  node27 -> node33 [style=dotted];
  node34 [label="==",shape=ellipse];
  node35 [label="modify",shape=ellipse];
  node36 [label="stpjob",shape=ellipse];
  node35 -> node36;
  node37 [label="call getjobpid",shape=ellipse];
  node38 [label="fpid",shape=ellipse];
  node37 -> node38;
  node39 [label="jobs",shape=ellipse];
  node37 -> node39;
  node35 -> node37 [style=dotted];
  node34 -> node35 [style=dotted];
  node40 [label="0",shape=ellipse];
  node34 -> node40;
  node33 -> node34 [style=dotted];
  node41 [label="call printf",shape=ellipse];
  node42 [label="\"no such job
\"",shape=ellipse];
  node41 -> node42;
  node33 -> node41 [style=dotted];
  node43 [label="call exit",shape=ellipse];
  node44 [label="0",shape=ellipse];
  node43 -> node44;
  node41 -> node43 [style=dotted];
  node45 [label="modify",shape=ellipse];
  node46 [label="component",shape=ellipse];
  node45 -> node46;
  node47 [label="*",shape=ellipse];
  node48 [label="stpjob",shape=ellipse];
  node47 -> node48;
  node46 -> node47;
  node49 [label=".",shape=ellipse];
  node46 -> node49;
  node50 [label="state",shape=ellipse];
  node49 -> node50;
  node51 [label="3",shape=ellipse];
  node45 -> node51;
  node33 -> node45 [style=dotted];
  node52 [label="call Sigprocmask",shape=ellipse];
  node53 [label="0",shape=ellipse];
  node52 -> node53;
  node54 [label="&",shape=ellipse];
  node52 -> node54;
  node55 [label="prev_all",shape=ellipse];
  node54 -> node55;
  node56 [label="2",shape=ellipse];
  node52 -> node56;
  node45 -> node52 [style=dotted];
  node57 [label="call printf",shape=ellipse];
  node58 [label="fpid",shape=ellipse];
  node57 -> node58;
  node59 [label="jobidx",shape=ellipse];
  node57 -> node59;
  node60 [label="\"Job [%d] (%d) stopped by sig\"",shape=ellipse];
  node57 -> node60;
  node52 -> node57 [style=dotted];
  node61 [label="return",shape=ellipse];
  node57 -> node61 [style=dotted];
} 