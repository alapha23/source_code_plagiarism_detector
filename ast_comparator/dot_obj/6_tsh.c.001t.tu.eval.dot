digraph AST {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  node1 [label="scope eval",shape=box];
  node2 [label="modify",shape=ellipse];
  node3 [label="bf",shape=ellipse];
  node2 -> node3;
  node4 [label="call parseline",shape=ellipse];
  node5 [label="argv",shape=ellipse];
  node4 -> node5;
  node6 [label="cmdline",shape=ellipse];
  node4 -> node6;
  node2 -> node4 [style=dotted];
  node1 -> node2 [style=dotted];
  node7 [label="if",shape=ellipse];
  node2 -> node7 [style=dotted];
  node8 [label="==",shape=ellipse];
  node9 [label="0",shape=ellipse];
  node8 -> node9;
  node7 -> node8 [style=dotted];
  node10 [label="return",shape=ellipse];
  node7 -> node10 [style=dotted];
  node11 [label="if",shape=ellipse];
  node7 -> node11 [style=dotted];
  node12 [label="!=",shape=ellipse];
  node13 [label="call builtin_cmd",shape=ellipse];
  node14 [label="argv",shape=ellipse];
  node13 -> node14;
  node12 -> node13 [style=dotted];
  node15 [label="0",shape=ellipse];
  node12 -> node15;
  node11 -> node12 [style=dotted];
  node16 [label="return",shape=ellipse];
  node11 -> node16 [style=dotted];
  node17 [label="if",shape=ellipse];
  node11 -> node17 [style=dotted];
  node18 [label="==",shape=ellipse];
  node19 [label="modify",shape=ellipse];
  node20 [label="childpid",shape=ellipse];
  node19 -> node20;
  node21 [label="call fork",shape=ellipse];
  node19 -> node21 [style=dotted];
  node18 -> node19 [style=dotted];
  node22 [label="0",shape=ellipse];
  node18 -> node22;
  node17 -> node18 [style=dotted];
  node23 [label="if",shape=ellipse];
  node17 -> node23 [style=dotted];
  node24 [label="==",shape=ellipse];
  node25 [label="call execve",shape=ellipse];
  node26 [label="environ",shape=ellipse];
  node25 -> node26;
  node27 [label="argv",shape=ellipse];
  node25 -> node27;
  node24 -> node25 [style=dotted];
  node28 [label="-1",shape=ellipse];
  node24 -> node28;
  node23 -> node24 [style=dotted];
  node29 [label="call printf",shape=ellipse];
  node30 [label="\"%s : Command not found.
\"",shape=ellipse];
  node29 -> node30;
  node23 -> node29 [style=dotted];
  node31 [label="call exit",shape=ellipse];
  node32 [label="0",shape=ellipse];
  node31 -> node32;
  node29 -> node31 [style=dotted];
  node33 [label="else if",shape=ellipse];
  node17 -> node33 [style=dotted];
  node34 [label="==",shape=ellipse];
  node35 [label="bf",shape=ellipse];
  node34 -> node35;
  node36 [label="0",shape=ellipse];
  node34 -> node36;
  node33 -> node34 [style=dotted];
  node37 [label="call addjob",shape=ellipse];
  node38 [label="cmdline",shape=ellipse];
  node37 -> node38;
  node39 [label="1",shape=ellipse];
  node37 -> node39;
  node40 [label="childpid",shape=ellipse];
  node37 -> node40;
  node41 [label="jobs",shape=ellipse];
  node37 -> node41;
  node33 -> node37 [style=dotted];
  node42 [label="call waitpid",shape=ellipse];
  node43 [label="0",shape=ellipse];
  node42 -> node43;
  node44 [label="0",shape=ellipse];
  node42 -> node44;
  node45 [label="childpid",shape=ellipse];
  node42 -> node45;
  node37 -> node42 [style=dotted];
  node46 [label="call addjob",shape=ellipse];
  node47 [label="cmdline",shape=ellipse];
  node46 -> node47;
  node48 [label="2",shape=ellipse];
  node46 -> node48;
  node49 [label="childpid",shape=ellipse];
  node46 -> node49;
  node50 [label="jobs",shape=ellipse];
  node46 -> node50;
  node33 -> node46 [style=dotted];
  node51 [label="return",shape=ellipse];
  node11 -> node51 [style=dotted];
} 