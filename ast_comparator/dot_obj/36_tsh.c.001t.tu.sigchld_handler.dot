digraph AST {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  node1 [label="scope sigchld_handler",shape=box];
  node2 [label="if",shape=ellipse];
  node1 -> node2 [style=dotted];
  node3 [label="==",shape=ellipse];
  node4 [label="call waitid",shape=ellipse];
  node5 [label="7",shape=ellipse];
  node4 -> node5;
  node6 [label="infop",shape=ellipse];
  node4 -> node6;
  node7 [label="0",shape=ellipse];
  node4 -> node7;
  node8 [label="0",shape=ellipse];
  node4 -> node8;
  node3 -> node4 [style=dotted];
  node9 [label="-1",shape=ellipse];
  node3 -> node9;
  node2 -> node3 [style=dotted];
  node10 [label="if",shape=ellipse];
  node2 -> node10 [style=dotted];
  node11 [label="!=",shape=ellipse];
  node12 [label="*",shape=ellipse];
  node13 [label="call __errno_location",shape=ellipse];
  node12 -> node13 [style=dotted];
  node11 -> node12;
  node14 [label="10",shape=ellipse];
  node11 -> node14;
  node10 -> node11 [style=dotted];
  node15 [label="call perror",shape=ellipse];
  node16 [label="\"waitid \"",shape=ellipse];
  node15 -> node16;
  node10 -> node15 [style=dotted];
  node17 [label="call deletejob",shape=ellipse];
  node18 [label="component",shape=ellipse];
  node17 -> node18;
  node19 [label="component",shape=ellipse];
  node18 -> node19;
  node20 [label="component",shape=ellipse];
  node19 -> node20;
  node21 [label="*",shape=ellipse];
  node22 [label="infop",shape=ellipse];
  node21 -> node22;
  node20 -> node21;
  node23 [label=".",shape=ellipse];
  node20 -> node23;
  node24 [label="_sifields",shape=ellipse];
  node23 -> node24;
  node25 [label=".",shape=ellipse];
  node19 -> node25;
  node26 [label="_kill",shape=ellipse];
  node25 -> node26;
  node27 [label=".",shape=ellipse];
  node18 -> node27;
  node28 [label="si_pid",shape=ellipse];
  node27 -> node28;
  node29 [label="jobs",shape=ellipse];
  node17 -> node29;
  node2 -> node17 [style=dotted];
  node30 [label="call free",shape=ellipse];
  node31 [label="infop",shape=ellipse];
  node30 -> node31;
  node17 -> node30 [style=dotted];
  node32 [label="return",shape=ellipse];
  node30 -> node32 [style=dotted];
} 